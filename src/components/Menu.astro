<label class="hamburger cursor-pointer block z-10 md:hidden">
  <input class="hidden" type="checkbox" />
  <svg class="h-8 duration-700" viewBox="0 0 32 32">
    <path
      class="line line-top-bottom"
      d="M27 10 13 10C10.8 10 9 8.2 9 6 9 3.5 10.8 2 13 2 15.2 2 17 3.8 17 6L17 26C17 28.2 18.8 30 21 30 23.2 30 25 28.2 25 26 25 23.8 23.2 22 21 22L7 22"
    ></path>
    <path class="line" d="M7 16 27 16"></path>
  </svg>
</label>

<nav
  class="nav-menu fixed top-0 w-full -left-full h-dvh bg-[var(--off-white)] py-24 px-8 z-0 duration-300
  md:static md:w-auto md:h-auto md:p-0 md:flex md:items-center"
>
  <ul
    class="links flex flex-col items-start gap-8 w-full
    md:flex-row md:gap-8 md:w-auto"
  >
    <li><a href="#landing" class="active">Home</a></li>
    <li><a href="#about">About</a></li>
    <li><a href="#works">Works</a></li>
    <li><a href="#skills">Skills</a></li>
  </ul>
</nav>

<style>
  .nav-menu[data-visible="true"] {
    left: 0;
  }

  a {
    color: var(--black);
    transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);
    padding: 0.25rem;
    font-size: clamp(1.175rem, 1.121rem + 0.143vw, 1.25rem);
    position: relative;
    display: inline-block;
    width: 100%;

    &:is(:hover, :focus) {
      color: var(--casal);
      transform: scale(1.1) translateY(-2px);
      border-color: var(--casal);
    }

    &.active {
      transform: scale(1.2) translateY(-2px);
      color: var(--casal);
      border-color: var(--casal);
    }
  }

  /* Desktop styles */
  @media (min-width: 768px) {
    a {
      width: auto;
      font-size: 1.25rem;
    }
  }

  .line {
    fill: none;
    stroke: var(--black);
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-width: 2;
    transition:
      stroke-dasharray 600ms cubic-bezier(0.4, 0, 0.2, 1),
      stroke-dashoffset 600ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  .line-top-bottom {
    stroke-dasharray: 12 63;
  }

  .hamburger input:checked + svg {
    transform: rotate(-45deg);
  }

  .hamburger input:checked + svg .line-top-bottom {
    stroke-dasharray: 20 300;
    stroke-dashoffset: -32.42;
  }
</style>

<script>
  const hamburger = document.querySelector(
    ".hamburger input"
  ) as HTMLInputElement;
  const navMenu = document.querySelector(".nav-menu");
  const links = document.querySelectorAll(".links a");

  hamburger?.addEventListener("change", () => {
    navMenu?.setAttribute("data-visible", hamburger.checked.toString());
  });

  // Close menu when clicking a link
  links.forEach((link) => {
    link.addEventListener("click", () => {
      hamburger.checked = false;
      navMenu?.setAttribute("data-visible", "false");
    });
  });

  // Handle active state
  import { classHandler } from "../utils/classHandler";
  classHandler(links as NodeListOf<HTMLElement>, "active");
</script>
